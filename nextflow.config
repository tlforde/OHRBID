// defines how many processes are allowed to run in parallel
process.maxForks = 4

// delete work directory when pipeline ends
cleanup = true

params {

  // set to true to save disk space, trimmomatic->picard steps will run twice
  saveSpace = true

  // input directory
  inputDir = "${baseDir}/test-data/test-fastq2"

  // glob pattern for input files
  pattern = '*_R{1,2}_001.fastq.gz'

  // output directory
  outputDir = "${baseDir}/space-test"

  // path to supplementary data (e.g. bowtie index, reference fasta, genbank file)
  refDir = "${baseDir}/test-data/Anthrax-ref"

  // file name for discRegFileCustom, set to null if no file
  discRegFileCustom = null

  // no monomorphic, "yes" or "no"
  noMonomorphic = "no"

  // min length for trimmomatic
  minLen = "36"

  // q threshold for trimmomatic
  qThreshold = "20" 

  // maixins for bowtie
  maxins = "800"

  // name of bowtie index, exclude .bt2 file extension
  bowtieIndexName = "NC_007530"

  // name of reference genome
  refGenomeName = "NC_007530.fasta"

  // name of genbank file
  genBank = "NC_007530.gb"

  // coverage threshold
  covThreshold = "10"

  // coverage threshold for varscan
  covThresVarscan = "8"

  // coverage threshold for making variant call table
  covThresVC = "4"

  // base freq threshold for making variant call table
  baseFreqThres = "0.89"

  // minimum reads for varscan
  minReads = "2"

  // minimum variant frequency varscan
  minVarFreq = "0.8"

  // minimum average quality for varscan
  minAvgQual = "20"

  // minimum base quality for bamreadcount
  minBaseQual = "20"

}

profiles {
  climbnotebook {

    process {

      withLabel:one_cpu { cpus = 1 }
      withLabel:low_cpu { cpus = 2 }
      withLabel:low_memory { memory = '5GB' }
      withLabel:medium_cpu { cpus = 4 }
      withLabel:medium_memory { memory = '10GB' }

      withName:createStatsFile {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:trimmomatic {
        container = "quay.io/climb-big-data/trimmomatic:0.39"
      }

      withName:bowtie2 {
        container = "quay.io/climb-big-data/bowtie2:2.4.5"
      }

      withName:sam2bam {
        container = "quay.io/climb-big-data/samtools:1.16.1"
      }

      withName:indexbam {
        container = "quay.io/climb-big-data/samtools:1.16.1"
      }

      withName:picard {
        container = "quay.io/climb-big-data/picard:2.27.5"
      }

      withName:trimmomaticRepeat {
        container = "quay.io/climb-big-data/trimmomatic:0.39"
      }

      withName:bowtie2Repeat {
        container = "quay.io/climb-big-data/bowtie2:2.4.5"
      }

      withName:sam2bamRepeat {
        container = "quay.io/climb-big-data/samtools:1.16.1"
      }

      withName:indexbamRepeat {
        container = "quay.io/climb-big-data/samtools:1.16.1"
      }

      withName:picardRepeat {
        container = "quay.io/climb-big-data/picard:2.27.5"
      }

      withName:bedtools {
        container = "quay.io/climb-big-data/bedtools:2.30.0"
      }

      withName:computeStatistics {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:mpileupVarscan {
        container = "quay.io/climb-big-data/varscan:2.4.4"
      }

      withName:extractPanSNPs {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:discardRegions {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:bamreadcount {
        container = "quay.io/climb-big-data/bamreadcount:1.0.1"
      }

      withName:makeVCtable {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:makeVCtableNoMonomorphic {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:makeVCflagTable {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:removeSelectedRegions {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:generateAlignmentTable {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:filterPanSNPs {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:filterPanSNPsNoCustom {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:extractMutatedGenes {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }
    }
  }

  singularity {

    singularity.enabled = 'true'
    singularity.autoMounts = 'true'

    // path to the cache for the singularity containers
    singularity.cacheDir = "${baseDir}/singularity"

    process {

      withLabel:one_cpu { cpus = 1 }
      withLabel:low_cpu { cpus = 2 }
      withLabel:low_memory { memory = '5GB' }
      withLabel:medium_cpu { cpus = 4 }
      withLabel:medium_memory { memory = '10GB' }

      withName:createStatsFile {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:trimmomatic {
        container = "quay.io/climb-big-data/trimmomatic:0.39"
      }

      withName:bowtie2 {
        container = "quay.io/climb-big-data/bowtie2:2.4.5"
      }

      withName:sam2bam {
        container = "quay.io/climb-big-data/samtools:1.16.1"
      }

      withName:indexbam {
        container = "quay.io/climb-big-data/samtools:1.16.1"
      }

      withName:picard {
        container = "quay.io/climb-big-data/picard:2.27.5"
      }

      withName:trimmomaticRepeat {
        container = "quay.io/climb-big-data/trimmomatic:0.39"
      }

      withName:bowtie2Repeat {
        container = "quay.io/climb-big-data/bowtie2:2.4.5"
      }

      withName:sam2bamRepeat {
        container = "quay.io/climb-big-data/samtools:1.16.1"
      }

      withName:indexbamRepeat {
        container = "quay.io/climb-big-data/samtools:1.16.1"
      }

      withName:picardRepeat {
        container = "quay.io/climb-big-data/picard:2.27.5"
      }

      withName:bedtools {
        container = "quay.io/climb-big-data/bedtools:2.30.0"
      }

      withName:computeStatistics {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:mpileupVarscan {
        container = "quay.io/climb-big-data/varscan:2.4.4"
      }

      withName:extractPanSNPs {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:discardRegions {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:bamreadcount {
        container = "quay.io/climb-big-data/bamreadcount:1.0.1"
      }

      withName:makeVCtable {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:makeVCtableNoMonomorphic {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:makeVCflagTable {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:removeSelectedRegions {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:generateAlignmentTable {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:filterPanSNPs {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:filterPanSNPsNoCustom {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:extractMutatedGenes {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }
    }
  }

  docker {

  docker.enabled = true
  fixOwnership = true
  runOptions = "-u \$(id -u):\$(id -g)"

    process {

      withLabel:one_cpu { cpus = 1 }
      withLabel:low_cpu { cpus = 2 }
      withLabel:low_memory { memory = '5GB' }
      withLabel:medium_cpu { cpus = 4 }
      withLabel:medium_memory { memory = '10GB' }

      withName:createStatsFile {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:trimmomatic {
        container = "quay.io/climb-big-data/trimmomatic:0.39"
      }

      withName:bowtie2 {
        container = "quay.io/climb-big-data/bowtie2:2.4.5"
      }

      withName:sam2bam {
        container = "quay.io/climb-big-data/samtools:1.16.1"
      }

      withName:indexbam {
        container = "quay.io/climb-big-data/samtools:1.16.1"
      }

      withName:picard {
        container = "quay.io/climb-big-data/picard:2.27.5"
      }

      withName:trimmomaticRepeat {
        container = "quay.io/climb-big-data/trimmomatic:0.39"
      }

      withName:bowtie2Repeat {
        container = "quay.io/climb-big-data/bowtie2:2.4.5"
      }

      withName:sam2bamRepeat {
        container = "quay.io/climb-big-data/samtools:1.16.1"
      }

      withName:indexbamRepeat {
        container = "quay.io/climb-big-data/samtools:1.16.1"
      }

      withName:picardRepeat {
        container = "quay.io/climb-big-data/picard:2.27.5"
      }

      withName:bedtools {
        container = "quay.io/climb-big-data/bedtools:2.30.0"
      }

      withName:computeStatistics {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:mpileupVarscan {
        container = "quay.io/climb-big-data/varscan:2.4.4"
      }

      withName:extractPanSNPs {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:discardRegions {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:bamreadcount {
        container = "quay.io/climb-big-data/bamreadcount:1.0.1"
      }

      withName:makeVCtable {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:makeVCtableNoMonomorphic {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:makeVCflagTable {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:removeSelectedRegions {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:generateAlignmentTable {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:filterPanSNPs {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:filterPanSNPsNoCustom {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }

      withName:extractMutatedGenes {
        container = "quay.io/climb-big-data/pybactocap:1.0.0"
      }
    }
  }

  conda {

    process {

      withLabel:one_cpu { cpus = 1 }
      withLabel:low_cpu { cpus = 2 }
      withLabel:low_memory { memory = '5GB' }
      withLabel:medium_cpu { cpus = 4 }
      withLabel:medium_memory { memory = '10GB' }

      withName:createStatsFile {
        conda = 'conda/pybactocap.yaml'
      }

      withName:trimmomatic {
        conda = 'conda/trimmomatic.yaml'
      }

      withName:bowtie2 {
        conda = 'conda/bowtie2.yaml'
      }

      withName:sam2bam {
        conda = 'conda/samtools.yaml'
      }

      withName:indexbam {
        conda = 'conda/samtools.yaml'
      }

      withName:picard {
        conda = 'conda/picard.yaml'
      }

      withName:trimmomaticRepeat {
        conda = 'conda/trimmomatic.yaml'
      }

      withName:bowtie2Repeat {
        conda = 'conda/bowtie2.yaml'
      }

      withName:sam2bamRepeat {
        conda = 'conda/samtools.yaml'
      }

      withName:indexbamRepeat {
        conda = 'conda/samtools.yaml'
      }

      withName:picardRepeat {
        conda = 'conda/picard.yaml'
      }

      withName:bedtools {
        conda = 'conda/bedtools.yaml'
      }

      withName:computeStatistics {
        conda = 'conda/pybactocap.yaml'
      }

      withName:mpileupVarscan {
        conda = 'conda/varscan.yaml'
      }

      withName:extractPanSNPs {
        conda = 'conda/pybactocap.yaml'
      }

      withName:discardRegions {
        conda = 'conda/pybactocap.yaml'
      }

      withName:bamreadcount {
        conda = 'conda/bamreadcount.yaml'
      }

      withName:makeVCtable {
        conda = 'conda/pybactocap.yaml'
      }

      withName:makeVCtableNoMonomorphic {
        conda = 'conda/pybactocap.yaml'
      }

      withName:makeVCflagTable {
        conda = 'conda/pybactocap.yaml'
      }

      withName:removeSelectedRegions {
        conda = 'conda/pybactocap.yaml'
      }

      withName:generateAlignmentTable {
        conda = 'conda/pybactocap.yaml'
      }

      withName:filterPanSNPs {
        conda = 'conda/pybactocap.yaml'
      }

      withName:filterPanSNPsNoCustom {
        conda = 'conda/pybactocap.yaml'
      }

      withName:extractMutatedGenes {
        conda = 'conda/pybactocap.yaml'
      }
    }
  }
}
