#!/usr/bin/python

#created by Matej Medvecky

#VC_table.dat must be tab-limited table generated by either makeVCtable.py or makeVCtableNoMonomorphic.py
#selected_regions.txt must be tab-limited text file with starting and ending position of the region(s) to be discarded; each region must be written on a new line!

import re
import sys

def selected_regions_remover():
	if len(sys.argv) != 3:
		print("USAGE: %s VC_table.dat selected_regions.txt" % sys.argv[0])
		return False

	snpPattern = re.compile(r'(.+?)\t(\d+)\t(.+?)\n')
	regPattern = re.compile(r'(\d+)\t(\d+)\n')
	snps = []
	snpsToBeRemoved = []
	header = ""
	with open(sys.argv[1], 'r') as tableFile, open(sys.argv[2], 'r') as regFile, open('VC_table_filtered.dat', 'w') as outFile:
		header = tableFile.readline().rstrip()
		for line in tableFile:
			data = snpPattern.findall(line)
			if data:
				snps.append([data[0][0], data[0][1], data[0][2]])
			else:
				print("ERROR: snpPattern does not match following line:\n%s" % line)
				return False
		for line in regFile:
			data = regPattern.findall(line)
			if data:
				for snp in snps:
					if int(snp[1]) >= int(data[0][0]) and int(snp[1]) <= int(data[0][1]):
						snpsToBeRemoved.append(snp)
						continue
			else:
				print("ERROR: regPattern does not match following line:\n%s" % line)
				return False
		for snp in snpsToBeRemoved:
			snps.remove(snp)
		outFile.write("%s\n" % header)
		for snp in snps:
			outFile.write("%s\t%s\t%s\n" % (str(snp[0]), str(snp[1]), str(snp[2])))
selected_regions_remover()
